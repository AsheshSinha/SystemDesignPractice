<mxfile host="app.diagrams.net" modified="2024-05-04T17:34:24.198Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.4.1 Safari/605.1.15" etag="BnDSBBmTdCfl4crJgmA1" version="24.3.1" type="github">
  <diagram name="Page-1" id="5rw8_xuSiJQBggX3PjnT">
    <mxGraphModel dx="1586" dy="1190" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="YMMeXwshyKwuWub0eHVM-1" value="&lt;font style=&quot;font-size: 19px;&quot;&gt;Global Unique Id Generation System&lt;/font&gt;" style="text;strokeColor=none;align=center;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="30" y="20" width="340" height="30" as="geometry" />
        </mxCell>
        <mxCell id="YMMeXwshyKwuWub0eHVM-3" value="&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;font style=&quot;font-size: 17px;&quot;&gt;&lt;b&gt;Functional:&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;1. The ids should be numeric and sortable&lt;/div&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;2. The ids should be globally unique within the distributed System&lt;/div&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;3. The ids should increase over time&lt;/div&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;4. The ids should be of length 64 bits&lt;/div&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;5. Throughput of the system should be 10,000 ids / sec&lt;/div&gt;" style="text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="45" y="80" width="465" height="130" as="geometry" />
        </mxCell>
        <mxCell id="YMMeXwshyKwuWub0eHVM-4" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;&lt;b&gt;Non Functional requirements:&lt;/b&gt;&lt;/font&gt;&lt;div&gt;1. The system should be highly available&lt;/div&gt;&lt;div&gt;2. Should be highly scalable&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="45" y="200" width="305" height="60" as="geometry" />
        </mxCell>
        <mxCell id="YMMeXwshyKwuWub0eHVM-5" value="Before diving into actual solution let&#39;s discuss the possible ways to solve this problem:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1. Multi master replication - In this technique we can use multiple My SQL servers and distribute id generation loads across multiple servers. This makes use of auto_increment feature of My SQL. Suppose we are using k servers each servers increment by k number.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;Pros: Easy implementations, support the estimated throughput&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;Cons: Ids don&#39;t increase by time, they increase by number k. Hard to add and remove/replace servers&lt;/span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;2. Use UUID: UUID has very low probability of hitting duplicate value, as per wiki if generated a billion times for each second&lt;/span&gt; &lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;for 100 years then we have 50% probability for single duplicate.&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&#x9;Cons: Id is having length of 128 bits and not numeric, which doesn&#39;t meet the requirements.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;Pros: Highly scalable as each web server can generate simultaneously.very easy to implement.&lt;/span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;3. Ticket service: We can use Flickr&#39;s way of generating id (using replace statement to generate the next id). However this&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;solution is good for medium to moderate load.&lt;/span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;4. Twitter snowflake&#39;s way: Twitter uses a method to generate id&#39;s for all the tweets which is globally unique and also sortable&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;. This also meets the requirement of having length 64 bits and increases with time. This seems to be the most fit as a solution.&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="45" y="260" width="705" height="220" as="geometry" />
        </mxCell>
        <mxCell id="YMMeXwshyKwuWub0eHVM-6" value="&lt;font style=&quot;font-size: 17px;&quot;&gt;&lt;b&gt;Deep Dive&lt;/b&gt;&lt;/font&gt;" style="text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="45" y="490" width="625" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
